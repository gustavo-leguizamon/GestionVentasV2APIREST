// <auto-generated />
using System;
using GL.GestionVentas.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GL.GestionVentas.Repositories.Migrations
{
    [DbContext(typeof(GestionVentasContext))]
    [Migration("20200801002201_PRODUCTO_add_data")]
    partial class PRODUCTO_add_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Carrito", b =>
                {
                    b.Property<int>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.HasKey("CarritoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carrito");

                    b.HasData(
                        new
                        {
                            CarritoId = 1,
                            ClienteId = 1
                        },
                        new
                        {
                            CarritoId = 2,
                            ClienteId = 2
                        },
                        new
                        {
                            CarritoId = 3,
                            ClienteId = 2
                        });
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.CarritoProducto", b =>
                {
                    b.Property<int>("CarritoProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("CarritoProductoId");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProducto");

                    b.HasData(
                        new
                        {
                            CarritoProductoId = 1,
                            Cantidad = 1,
                            CarritoId = 1,
                            ProductoId = 3
                        },
                        new
                        {
                            CarritoProductoId = 2,
                            Cantidad = 1,
                            CarritoId = 1,
                            ProductoId = 4
                        },
                        new
                        {
                            CarritoProductoId = 3,
                            Cantidad = 1,
                            CarritoId = 2,
                            ProductoId = 3
                        },
                        new
                        {
                            CarritoProductoId = 4,
                            Cantidad = 1,
                            CarritoId = 3,
                            ProductoId = 5
                        });
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Apellido = "Perez",
                            DNI = "30000001",
                            Direccion = "Calle falsa 123",
                            Nombre = "Roberto",
                            Telefono = "12345678"
                        },
                        new
                        {
                            ClienteId = 2,
                            Apellido = "Fulanito",
                            DNI = "40000001",
                            Direccion = "Av. Mitre 123",
                            Nombre = "Cosme",
                            Telefono = "12345555"
                        },
                        new
                        {
                            ClienteId = 3,
                            Apellido = "Rodriguez",
                            DNI = "50000001",
                            Direccion = "Calchaqui 3000",
                            Nombre = "Patricia",
                            Telefono = "11111111"
                        });
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("EstadoId");

                    b.ToTable("Estado");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Nombre = "Activo"
                        },
                        new
                        {
                            EstadoId = 2,
                            Nombre = "Cancelado"
                        });
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("ProductoId");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Codigo = "MOU",
                            Imagen = "https://www.xt-pc.com.ar/img/productos/Pics_Prod/MOU606.jpg",
                            Marca = "Noganet",
                            Nombre = "Mouse",
                            Precio = 199.99m
                        },
                        new
                        {
                            ProductoId = 2,
                            Codigo = "CAM",
                            Imagen = "https://arsonyb2c.vteximg.com.br/arquivos/ids/292526-1000-1000/ILCE-7K_Black-0.jpg?v=637124363789970000",
                            Nombre = "Camara",
                            Precio = 1500.00m
                        },
                        new
                        {
                            ProductoId = 3,
                            Codigo = "TEC",
                            Imagen = "https://http2.mlstatic.com/teclado-usb-ergonomico-pc-notebook-oficina-qwerty-espanol-garantia-oficial-D_NQ_NP_626103-MLA31936565669_082019-F.jpg",
                            Marca = "Noganet",
                            Nombre = "Teclado",
                            Precio = 2060m
                        },
                        new
                        {
                            ProductoId = 4,
                            Codigo = "MON",
                            Imagen = "https://images.samsung.com/is/image/samsung/uk-led-sf350-ls24f350fhuxen-001-front-black?$PD_GALLERY_L_JPG$",
                            Marca = "Samsung",
                            Nombre = "Monitor",
                            Precio = 4650.50m
                        },
                        new
                        {
                            ProductoId = 5,
                            Codigo = "CPU",
                            Imagen = "https://vignette2.wikia.nocookie.net/applezone/images/6/67/CPU.jpg/revision/latest?cb=20120318030604&path-prefix=es",
                            Marca = "Gigabit",
                            Nombre = "CPU",
                            Precio = 6900m
                        },
                        new
                        {
                            ProductoId = 6,
                            Codigo = "AUR",
                            Imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQxHQK6bexxEunRDrGWtf-baJVbaFKOeX2cxA&usqp=CAU",
                            Marca = "WorldTech",
                            Nombre = "Auricular",
                            Precio = 1299m
                        },
                        new
                        {
                            ProductoId = 7,
                            Codigo = "SIL",
                            Imagen = "https://images.bidcom.com.ar/resize?src=https://www.bidcom.com.ar/publicacionesML/productos/SILLA14X/1000x1000-SILLA14X.jpg&w=500&q=100",
                            Marca = "WorldTech",
                            Nombre = "Silla gamer",
                            Precio = 30999.99m
                        },
                        new
                        {
                            ProductoId = 8,
                            Codigo = "PAR",
                            Imagen = "https://lh3.googleusercontent.com/proxy/_w0DznoyQ7Bn93pz8t3fY4zETeUWGQYH3ZWeiQkMCCdK7lnkuMuDH093tTDbaOdY1Ozi-hWD7oCRm0u31UBhbeZ2bucbfZGNlgy4",
                            Marca = "Kolke",
                            Nombre = "Parlantes",
                            Precio = 299.99m
                        },
                        new
                        {
                            ProductoId = 9,
                            Codigo = "NOT",
                            Imagen = "https://http2.mlstatic.com/notebook-hp-250-g7-core-i3-7020u-8gb-1tb-156-win10-cta-off-D_NQ_NP_692739-MLA31428906360_072019-O.webp",
                            Marca = "Intel",
                            Nombre = "Notebook",
                            Precio = 20099.00m
                        },
                        new
                        {
                            ProductoId = 10,
                            Codigo = "JOY",
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_702700-MLA32150735923_092019-O.webp",
                            Marca = "Sony",
                            Nombre = "Joystick",
                            Precio = 13999m
                        });
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Ventas", b =>
                {
                    b.Property<int>("VentasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("VentasId");

                    b.HasIndex("CarritoId")
                        .IsUnique();

                    b.HasIndex("EstadoId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Carrito", b =>
                {
                    b.HasOne("GL.GestionVentas.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.CarritoProducto", b =>
                {
                    b.HasOne("GL.GestionVentas.Domain.Entities.Carrito", "Carrito")
                        .WithMany("CarritoProducto")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GL.GestionVentas.Domain.Entities.Producto", "Producto")
                        .WithMany("CarritoProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GL.GestionVentas.Domain.Entities.Ventas", b =>
                {
                    b.HasOne("GL.GestionVentas.Domain.Entities.Carrito", "Carrito")
                        .WithMany("Ventas")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GL.GestionVentas.Domain.Entities.Estado", "Estado")
                        .WithMany("Ventas")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
